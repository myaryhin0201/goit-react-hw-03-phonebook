{"version":3,"sources":["components/ContantItem/ContantItemStyles.jsx","components/ContantItem/ContantItem.jsx","components/ContactsList/ContactsList.jsx","components/ContactForm/ContactFormStyles.jsx","components/ContactForm/ContactForm.jsx","components/Filter/FilterStyles.jsx","components/Filter/Filter.jsx","components/Phonebook/Phonebook.jsx","components/Container/index.jsx","components/Layouts/index.jsx","App.js","index.js"],"names":["useStyles","createUseStyles","ContactItem","display","flexDirection","justifyContent","marginBottom","ContactName","minWidth","ContactNumber","width","ContactButton","border","borderRadius","backgroundColor","color","ContanctItem","id","name","number","onDeleteContact","classes","className","onClick","ContactsList","padding","contacts","length","map","Phonebook","borderColor","outline","PhonebookInput","fontSize","initialState","ContactForm","onSubmit","useState","inputValue","setInputValue","changeInput","e","currentTarget","value","preventDefault","Object","values","some","item","reset","type","pattern","title","required","placeholder","onChange","Filter","paddingLeft","defaultProps","initialContacts","setContacts","filter","setFilter","useEffect","data","JSON","parse","localStorage","getItem","setItem","stringify","normalizedFilter","toLowerCase","filteredContacts","includes","find","contact","alert","newContact","shortid","generate","prevState","contactId","Container","maxWidth","margin","marginTop","fontWeight","backgroundImage","WebkitBackgroundClip","WebkitTextFillColor","children","Layout","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89cc46ed.chunk.js","sourcesContent":["import { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  ContactItem: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    '&:not(:last-child)': {\n      marginBottom: '10px',\n    },\n  },\n  ContactName: {\n    minWidth: '150px',\n  },\n  ContactNumber: {\n    width: '125px',\n  },\n  ContactButton: {\n    border: ' 2px solid rgba(255,255,255,0.27)',\n    borderRadius: '0px 10px 0px 10px',\n    backgroundColor: 'purple',\n    color: 'white',\n    '&:hover, &:focus': {\n      '.ContactItem': {\n        backgroundColor: 'black',\n      },\n      backgroundColor: 'black',\n    },\n  },\n});\nexport default useStyles;\n","import PropTypes from 'prop-types';\nimport useStyles from './ContantItemStyles';\nconst ContanctItem = ({ id, name, number, onDeleteContact }) => {\n  const classes = useStyles();\n  return (\n    <li className={classes.ContactItem}>\n      <p className={classes.ContactName}>{name}</p>\n      <p className={classes.ContactNumber}>{number}</p>\n      <button\n        className={classes.ContactButton}\n        onClick={() => onDeleteContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\nContanctItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\nexport default ContanctItem;\n","import { createUseStyles } from 'react-jss';\nimport PropTypes from 'prop-types';\nimport ContactItem from '../ContantItem';\nconst useStyles = createUseStyles({\n  ContactsList: {\n    padding: '20px',\n    width: '450px',\n    border: '2px solid black',\n    borderRadius: '10px',\n    marginBottom: '20px',\n  },\n});\n\nconst ContactsList = ({ contacts, onDeleteContact }) => {\n  const classes = useStyles();\n  return (\n    <ul className={classes.ContactsList}>\n      {contacts.length !== 0 ? (\n        contacts.map(({ id, name, number }) => (\n          <ContactItem\n            key={id}\n            id={id}\n            name={name}\n            number={number}\n            onDeleteContact={onDeleteContact}\n          />\n        ))\n      ) : (\n        <p>This contact is not in the list</p>\n      )}\n    </ul>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default ContactsList;\n","import { createUseStyles } from 'react-jss';\nconst useStyles = createUseStyles({\n  Phonebook: {\n    width: '450px',\n    border: '2px solid black',\n    borderRadius: '10px',\n    padding: '10px 10px',\n    '& button': {\n      border: ' 2px solid rgba(136,31,136,0.87)',\n      borderRadius: '20px 0px 20px 0px',\n      backgroundColor: 'white',\n      padding: '5px 30px',\n      '&:hover, &:focus': {\n        backgroundColor: 'indigo',\n        borderColor: 'indigo',\n        color: 'white',\n        outline: 'none ',\n      },\n    },\n  },\n  PhonebookInput: {\n    display: 'flex',\n    width: '215px',\n    flexDirection: 'column',\n    marginBottom: '20px',\n    '& span': {\n      marginBottom: '10px',\n      fontSize: '20px',\n    },\n    '& input': {\n      minWidth: '225px',\n      border: 'none',\n      borderRadius: '10px',\n      padding: '5px 15px',\n      fontSize: '15px',\n      '&:hover, &:focus': {\n        outline: 'none',\n      },\n    },\n  },\n});\n\nexport default useStyles;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport useStyles from './ContactFormStyles';\nconst initialState = {\n  name: '',\n  number: '',\n};\nconst ContactForm = ({ onSubmit }) => {\n  const classes = useStyles();\n  const [inputValue, setInputValue] = useState(initialState);\n  const { name, number } = inputValue;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const hasEmptyField = Object.values(inputValue).some(item => !item);\n    if (hasEmptyField) {\n      return;\n    }\n    onSubmit(name, number);\n    setInputValue(initialState);\n    e.currentTarget.reset();\n  };\n\n  const changeInput = e => {\n    const { name, value } = e.currentTarget;\n    setInputValue({ ...inputValue, [name]: value });\n  };\n  return (\n    <form onSubmit={handleSubmit} className={classes.Phonebook}>\n      <label className={classes.PhonebookInput}>\n        <span>Name</span>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          placeholder=\"Enter your name\"\n          onChange={changeInput}\n        />\n      </label>\n      <label className={classes.PhonebookInput}>\n        <span>Phone</span>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          required\n          placeholder=\"Enter your phone number\"\n          onChange={changeInput}\n        />\n      </label>\n      <button type=\"submit\">Add Contact</button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  Filter: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n    marginBottom: '20px',\n    fontSize: '20px',\n    width: '450px',\n    '& input': {\n      minWidth: '225px',\n      border: 'none',\n      borderRadius: '10px',\n      paddingLeft: '15px',\n      fontSize: '15px',\n      '&:hover, &:focus': {\n        outline: 'none',\n      },\n    },\n  },\n});\nexport default useStyles;\n","import PropTypes from 'prop-types';\nimport useStyles from './FilterStyles';\nconst Filter = ({ value, onChange }) => {\n  const classes = useStyles();\n  return (\n    <label className={classes.Filter}>\n      <span> Find contact by name</span>\n      <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n  );\n};\nFilter.defaultProps = {\n  value: '',\n};\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import { useState, useEffect } from 'react';\nimport shortid from 'shortid';\n\nimport ContactsList from '../ContactsList';\nimport ContactForm from '../ContactForm/';\nimport Filter from '../Filter';\n\nconst initialContacts = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56699' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12699' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79151' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-2612' },\n];\n\nconst Phonebook = () => {\n  const [contacts, setContacts] = useState(initialContacts);\n  const [filter, setFilter] = useState('');\n\n  const handleAddContact = (name, number) => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    setContacts(prevState => [newContact, ...prevState]);\n  };\n\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem('contacts'));\n    setContacts(data);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const handleDeleteContact = contactId => {\n    setContacts(prevState => prevState.filter(({ id }) => id !== contactId));\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n  const normalizedFilter = filter.toLowerCase();\n\n  const filteredContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n  return (\n    <>\n      <h2>Phonebook</h2>\n      <ContactForm onSubmit={handleAddContact} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactsList\n        contacts={filteredContacts}\n        onDeleteContact={handleDeleteContact}\n      />\n    </>\n  );\n};\nexport default Phonebook;\n","import PropTypes from 'prop-types';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  Container: {\n    maxWidth: '1200px',\n    margin: '0 auto',\n    padding: '0 15px',\n    '& h2': {\n      display: 'inline-block',\n      marginTop: '20px',\n      marginBottom: '20px',\n      fontSize: '35px',\n      fontWeight: 'bold',\n      backgroundImage:\n        'linear-gradient(to left, violet, indigo, blue, green, black, orange, red)',\n      WebkitBackgroundClip: 'text',\n      WebkitTextFillColor: 'transparent',\n    },\n  },\n});\n\nconst Container = ({ children }) => {\n  const classes = useStyles();\n  return <div className={classes.Container}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\nexport default Container;\n","import PropTypes from 'prop-types';\nimport Container from '../Container';\n\nconst Layout = ({ children }) => <Container>{children}</Container>;\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","// Компоненты\nimport Phonebook from './components/Phonebook';\nimport Layout from './components/Layouts';\n\nfunction App() {\n  return (\n    <Layout>\n      <Phonebook />\n    </Layout>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}